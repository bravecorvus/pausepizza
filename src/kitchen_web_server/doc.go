// Kitchen Management API Backend
// 2018 Andrew Lee

// This contains the backend code to serve the endpoints for the Pause Kitchen Management API.
// Furthermore, this server also automatically updates the endpoints for the client ordering app whenever a change is registered on the Kitchen Management side
// Since this server has write access to the key data stores (unlike the client app), this  server is protected by a token based endpoint system.
//
// Note, some aspects of the app such as the email package and the auth and superauth JSON files in assets/v5/ have been left out of the repo due to the fact that they contain sensitive information.
// They are instead replaced by files titled
//	assets/v5/auth/example.json  assets/v5/superadmin/example.json in order to protect the raw data of the application.
// and
//	src/kitchen_web_server/auth/example.go
// which should give you a good idea of where to get started if you need to implement something similar
//
// Authentication
//
// To authenticate with the kitchen management server, the user will initially send a POST to the endpoint,
//	v5/login
// with the information of username and password.
// If the username and password is a valid registered application user, a token consisting of a randomly generated 40 character string will be generated by the server, and sent back to the client to use as the first slug.
// This generated token is time sensitive and will expire at the duration passed into the GenerateNewToken() function in auth/token.go. The web server also runs a cron job at the beginning of every minute to delete expired tokens.
//
// The following is an example using curl to receive a valid token to use.
//	curl -H "Content-Type: application/json" -X POST -d '{"username":"[a valid username]","[a valid password]":"abcd"}' [server address]/v5/login
// This should return
//	{"associatedUser":"leeas","value":"[a valid token]",
// From this point, the user uses the "value" object in the JSON response to GET and to POST to all endpoints.
//
//
// Examples
//
//
// To GET the v5/pizza endpoint after generating a valid access token:
//	curl [server address]/v5/[generated token]/pizza
// To POST to the pizza endpoint with new data:
//	curl -H "Content-Type: application/json" -X POST -d '[INSERT RAW JSON CONTENT]' [server address]/[generated token]/pizza
//
package main
